@import "./vars.scss";
@import "./mixins.scss";
body {
  background-color: $b1;
  color: $f1;
  > #__next {
    @include flexC();
    align-items: stretch;
    gap: 0;
    height: 100vh;
    // overflow-y: hidden;
    > div,
    > header {
      padding: 1vw 2vw;
      @media screen and (min-width: 800px) {
        padding: 1vw 6vw;
      }
    }
    > div:nth-of-type(1) {
      padding-bottom: 0;
    }
  }
  p,
  li,
  div,
  span,
  button,
  label,
  textarea,
  input {
    @include vwFont(1.2);
  }
  h1 {
    @include vwFont(1.4);
  }
  h2 {
    @include vwFont(1.3);
  }
  h3 {
    @include vwFont(1.2);
  }
}
header {
  background-color: $b2;
  @include flexR();
  justify-content: space-between;
  align-items: center;
  nav {
    @include flexR();
    button {
      @include flexC();
      align-items: center;
      @include button();
    }
  }
}
form {
  background-color: $b2;
  padding: 1rem;
  @include flexC();
  align-items: center;

  button {
    @include button;
    background-color: $c2;
    &:hover {
      @include button-animate-on-hover(c2);
    }
  }
}
label {
  @include flexR();
  flex-wrap: wrap;
  gap: 0;
  align-items: center;
  justify-content: flex-start;
}
.error {
  color: $e1;
}

.smalltext {
  @include vwFont(0.5);
}

.double-icon {
  position: relative;
  top: 0;
  width: 4.5vw;
  height: 4.5vw;
  min-width: 2rem;
  min-height: 2rem;
  .top-icon {
    position: absolute;
    top: 0;
    left: 0;
    width: 3vw;
    height: 3vw;
    min-width: 2rem;
    min-height: 2rem;
    @include dropShadow();
  }
  .bottom-icon {
    position: absolute;
    top: 0.7vw;
    left: 1vw; //problem causer! when calculating min-width, the 1vw messes up the offset.
    //if you specify min-width, and set the position to the RIGHT instead, you can fake the min-left effect
    width: 3.5vw;
    height: 3.5vw;
    min-width: 1rem;
    min-height: 1rem;
  }
}
a {
  cursor: pointer;
}
.e1 {
  color: $e1;
}
.c1 {
  color: $c1;
}
.c2 {
  color: $c2;
}

::-webkit-scrollbar {
  width: 1rem;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: lighten($c2, 30%);
  border-radius: 0.3rem;
}

.button-icon {
  cursor: pointer;
}
.buttonRow {
  margin-top: 0.3vw;
  padding: 1vw;
  border-top: 0.1vw solid $c2;
  border-bottom: 0.1vw solid $c2;
  background: linear-gradient(
    to left,
    transparent 0%,
    transparentize($c2, 0.8) 50%,
    transparent 100%
  );
  @include flexR();
  justify-content: space-evenly;
  > button {
    @include button();
  }
}
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
